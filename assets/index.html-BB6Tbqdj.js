import{_ as i,c as e,b as a,o as n}from"./app-DoHt5aEZ.js";const t="/assets/webpack-Dj4sn06v.png",l={};function r(h,s){return n(),e("div",null,s[0]||(s[0]=[a(`<ol><li>memo和useMemo？ 答：memo用于缓存组件，避免无效重渲染。组件被 memo 包装后，React 会在重渲染前浅比较新旧 props，如果不变，复用上次的渲染结果，不重新执行。除了接收第一个参数组件之外，还接受第二个参数自定义比较函数。 useMemo，缓存值，避免重复计算。当依赖项未变化时，复用上次的计算结果。useMemo 接收两个参数：① 计算函数（返回需要缓存的值）；② 依赖项数组。useMemo也是浅比较依赖项。</li><li>webpack的配置项？ 答：主要分为：入口（entry），输出（output）：里面可以配置path，filename等等，模块处理（module），核心是rules规则，test匹配文件，use指定加载器loader。</li></ol><div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-jsx"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rules</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      test</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> /</span><span style="--shiki-light:#BDA437;--shiki-dark:#E6CC77;">\\.</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">css</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">$</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">i</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      use</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">        &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">style-loader</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      ]</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插件（plugins），模式（mode）：指定打包模式，开发模式，生产模式，优化（optimization）：代码分割，压缩，Tree-shaking，还有其他的resolve，devServer等维度。 <img src="`+t+'" alt="webpack"> 3. vue和react的区别是什么？ 4. 说说redux？ 5. vue2和vue3的区别？ 6. react中的事件机制？ 答：合成事件，通过 JSX 属性（如 onClick）绑定。 7. 怎么改变两个宏任务的执行顺序？ 8. ts的数据类型 9. 深拷贝的方法？ 10.</p>',3)]))}const k=i(l,[["render",r]]),d=JSON.parse('{"path":"/article/r365a2z5/","title":"5.博道","lang":"zh-CN","frontmatter":{"title":"5.博道","createTime":"2025/09/18 15:52:49","permalink":"/article/r365a2z5/"},"readingTime":{"minutes":1.1,"words":331},"git":{"createdTime":1758212325000,"updatedTime":1758212325000,"contributors":[{"name":"wanting you","username":"","email":"wantingyou@192.168.0.189","commits":1,"avatar":"https://gravatar.com/avatar/e31546a2929f0b775e3b84421df4cc9a6a3213c7a861d719dac34ee148e9c6f8?d=retro"}]},"filePathRelative":"preview/面试/5.博道.md","headers":[],"categoryList":[{"id":"5ebeb6","sort":10000,"name":"preview"},{"id":"6264fb","sort":10004,"name":"面试"}]}');export{k as comp,d as data};

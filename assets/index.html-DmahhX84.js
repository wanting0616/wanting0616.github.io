import{_ as a,c as t,b as o,o as r}from"./app-DoHt5aEZ.js";const s={};function i(c,e){return r(),t("div",null,e[0]||(e[0]=[o('<blockquote><p>💬 <strong>Q：为什么需要Hook？</strong><br> 🧠 A： 先来剖析class组件的优势：1. 可以定义自己的state，用来保存组件自己内部的状态；2. 有自己的生命周期，我们可以在对应的生命周期中完成自己的逻辑；3. 在状态改变时只会重新执行render函数以及我们希望重新调用的生命周期函数componentDidUpdate等。<mark>函数式组件的缺陷就是class组件的优势相反</mark>缺陷：1. 随着业务的增多，我们的class组件会变得越来越复杂；2. 对于js高级不了解的可能学习起来会比较困难，比如this指向等等；3. 组件复用状态很难，要用到高阶组件。<br> Hook的出现解决上面的问题：可以让我们在不编写class的情况下使用state以及其他的React特性</p></blockquote><h3 id="hook的使用场景" tabindex="-1"><a class="header-anchor" href="#hook的使用场景"><span>Hook的使用场景：</span></a></h3><ul><li>Hook的出现基本可以代替我们之前所有使用class组件的地方；</li><li>但是如果是一个旧的项目，你并不需要直接将所有的代码重构为Hooks，因为它完全向下兼容，你可以渐进式的来使用它；</li><li>Hook只能在函数组件中使用，不能在类组件，或者函数组件之外的地方使用；</li></ul>',3)]))}const l=a(s,[["render",i]]),m=JSON.parse('{"path":"/article/em6a8erv/","title":"11.hook相关","lang":"zh-CN","frontmatter":{"title":"11.hook相关","createTime":"2025/08/30 11:21:20","permalink":"/article/em6a8erv/"},"readingTime":{"minutes":1.15,"words":345},"git":{"createdTime":1756692602000,"updatedTime":1756692602000,"contributors":[{"name":"wanting you","username":"","email":"wantingyou@192.168.0.189","commits":1,"avatar":"https://gravatar.com/avatar/e31546a2929f0b775e3b84421df4cc9a6a3213c7a861d719dac34ee148e9c6f8?d=retro"}]},"filePathRelative":"preview/React/11.hook相关.md","headers":[],"categoryList":[{"id":"5ebeb6","sort":10000,"name":"preview"},{"id":"2b5879","sort":10002,"name":"React"}]}');export{l as comp,m as data};
